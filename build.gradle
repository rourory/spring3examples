plugins {
    id "org.springframework.boot" version "3.0.4"
    id "io.spring.dependency-management" version "1.0.15.RELEASE"
    id "io.freefair.lombok" version "8.0.0-rc2"
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

apply from: 'version.gradle'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    querydsl.extendsFrom implementation, annotationProcessor
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation "org.springdoc:springdoc-openapi-ui:${versions.swagger}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.swagger}"
//    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation "com.querydsl:querydsl-jpa:${versions.querydsl}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${versions.jakarta_persistence}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:postgresql:${versions.postgresql}"

}

querydsl {
    jpa = true
    library = "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
//    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
    enabled(false)
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}